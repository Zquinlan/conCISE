filter(DayNight == 'Day')%>%
left_join(ecoNet%>%
select(-scan)%>%
filter(network != '-1')%>%
unique(), by = 'network')
write_csv(cyto_deplete, './analysis/cyto_depletes.csv')
# Linda df ----------------------------------------------------------------
linda_df <- feature_stats_wdf%>%
ungroup()%>%
filter(DayNight == "Day")%>%
select(feature_number, Organism, Timepoint, Replicate, DayNight, xic)%>%
group_by(feature_number, Organism, DayNight, Replicate, Timepoint)%>%
summarize_if(is.numeric, mean)%>%
ungroup()%>%
spread(Timepoint, xic)%>%
left_join(log2_change_vals%>%
select(-c(T0, TF))%>%
group_by(feature_number, Organism, DayNight)%>%
summarize_if(is.numeric, mean),
by = c("feature_number", "Organism","DayNight"))%>%
left_join(networking%>%
select(feature_number, network),
by = 'feature_number')%>%
mutate(net_act = case_when(network == -1 ~ -as.numeric(feature_number),
TRUE ~ network))%>%
left_join(all_activity, by = c('net_act', 'DayNight'))%>%
select(feature_number, network, activity, Organism, Replicate, DayNight, everything())%>%
select(-net_act)
linda_sum <- linda_df%>%
group_by(Organism, activity, Replicate, DayNight)%>%
summarize_if(is.numeric, sum)%>%
ungroup()%>%
select(-log2_change)%>%
gather(Timepoint, xic, T0:TF)%>%
group_by(Organism, activity, Timepoint, DayNight)%>%
mutate(err = sd(xic))%>%
# summarize_if(is.numeric, mean, na.rm = TRUE)%>%
ungroup()%>%
unite(org_activity, c('Organism', 'activity'), sep = ' / ', remove = FALSE)%>%
mutate(shape = case_when(Timepoint == 'T0' ~ 'T0',
Timepoint == 'TF' & activity == 'depletolite' ~ 'TF depletion',
Timepoint == 'TF' & activity == 'accumolite' ~ 'TF accumulation',
Timepoint == 'TF' & activity == 'recalcitrant' & Organism == 'Turf' ~ 'accumulation',
TRUE ~ 'TF depletion'))%>%
group_by(Organism, Replicate, Timepoint)%>%
mutate(ra = xic/sum(xic, na.rm = TRUE))%>%
ungroup()
# png("./plots/change_xic_activity.png", width = 1500, height = 1000)
# linda_sum%>%
#   filter(activity != 'recalcitrant')%>%
#   mutate(log10 = log10(xic))%>%
#   ggplot(aes(ra, org_activity, color = Organism, shape = shape)) +
#   geom_point(stat = 'identity', size = 14, alpha = 0.45) +
#   # geom_errorbarh(aes(xmin = xic - err, xmax = xic + err)) +
#   geom_line(aes(group = org_activity)) +
#   scale_color_manual(values = org_colors_no_water) +
#   scale_shape_manual(values = c("\u25A0", "\u25C4", "\u25BA")) +
#   labs(x = 'Relative Abundance', y = 'Organism / Activity') +
#   # scale_x_log10() +
#   facet_wrap(~activity, nrow = 1, ) +
#   theme(axis.line = element_blank(),
#         axis.text = element_text(size = 20),
#         axis.ticks = element_blank(),
#         legend.background = element_rect(fill = "transparent"), # get rid of legend bg
#         legend.box.background = element_blank(),
#         panel.background = element_rect(fill = "transparent"), # bg of the panel
#         plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
#         strip.text = element_text(size=20),
#         legend.text = element_text(size = 20),
#         legend.title = element_text(size = 20),
#         legend.position = 'none',
#         title = element_text(size = 40, hjust = 0.5),
#         plot.title = element_text(hjust = 0.5, vjust = 3),
#         strip.background = element_blank())
linda_mean_diff <- linda_sum%>%
select(-c(err:ra))%>%
group_by(org_activity, Organism, activity)%>%
mutate(x_val = max(xic, na.rm = TRUE))%>%
ungroup()%>%
group_by(org_activity, Organism, activity, Timepoint)%>%
summarize_if(is.numeric, mean, na.rm = TRUE)%>%
ungroup()%>%
spread(Timepoint, xic)%>%
mutate(difference = TF-T0)%>%
filter(activity != 'recalcitrant')
png("./plots/change_xic_activity.png", width = 2000, height = 1500)
linda_sum%>%
filter(activity != 'recalcitrant')%>%
mutate(log10 = log10(xic))%>%
ggplot(aes(xic, Organism, color = Organism, shape = shape)) +
geom_point(stat = 'identity', size = 14, alpha = 0.45) +
# geom_errorbarh(aes(xmin = xic - err, xmax = xic + err)) +
geom_line(aes(group = Organism)) +
geom_text(data = linda_mean_diff, aes(x = x_val, y = Organism,
label = formatC(difference, format = 'e', digits = 2),
shape = NULL), vjust = -1, size = 7) +
facet_wrap(~activity, nrow = 1, scales = 'free_x') +
scale_color_manual(values = org_colors_no_water) +
scale_shape_manual(values = c("\u25A0", "\u25BA", "\u25C4")) +
labs(x = 'Sum Intensity (xic)', y = 'Organism', color = 'Organism: ', shape = 'Sample:') +
# xlim(0,0.3) +
# scale_x_log10() +
# facet_wrap(~activity, nrow = 3) +
theme(axis.line = element_blank(),
axis.text = element_text(size = 20),
axis.ticks = element_blank(),
axis.text.x = element_text(angle = 30, hjust = 1),
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_blank(),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
strip.text = element_text(size= 25),
legend.text = element_text(size = 25),
legend.title = element_text(size = 25),
legend.position = 'top',
title = element_text(size = 40, hjust = 0.5),
plot.title = element_text(hjust = 0.5, vjust = 3),
strip.background = element_blank()) +
guides(color = guide_legend(nrow=2, byrow=TRUE),
shape = guide_legend(nrow=2, byrow=TRUE))
dev.off()
# linda_split <- linda_df%>%
#   group_by(Organism)%>%
#   split(.$Organism)
# list2env(linda_split, globalenv())
#
# write_csv(`Pocillopora verrucosa`, '~/Documents/SDSU_Scripps/DORCIERR/Datasets/linda_features_pocillopora.csv')
# write_csv(`Porites lobata`, '~/Documents/SDSU_Scripps/DORCIERR/Datasets/linda_features_porites.csv')
# write_csv(`CCA`, '~/Documents/SDSU_Scripps/DORCIERR/Datasets/linda_features_cca.csv')
# write_csv(`Turf`, '~/Documents/SDSU_Scripps/DORCIERR/Datasets/linda_features_turf.csv')
# write_csv(`Dictyota`, '~/Documents/SDSU_Scripps/DORCIERR/Datasets/linda_features_dictyota.csv')
linda_pie_features <- org_log2_ra%>%
filter(DayNight == 'Day')%>%
group_by(feature_number, Organism, network, activity)%>%
summarize_if(is.numeric, mean)%>%
ungroup()%>%
left_join(metadata%>%
select(combined_ID, binary_ID, feature_number, ZodiacMF, ZodiacScore, C, H, N, O, P, S, NOSC, dG),
by = 'feature_number')
write_csv(linda_pie_features, '~/Documents/GitHub/DORCIERR/data/analysis/lindaPieChartMetadata.csv')
linda_depletolites <- venn%>%
left_join(metadata%>%
select(combined_ID, binary_ID, SmilesLibrary_, SmilesAnalog_, feature_number, network, ZodiacMF, ZodiacScore, C, H, N, O, P, S, NOSC, dG),
by = 'feature_number')%>%
left_join(venn_df%>%
select(Intersection, feature_number),
by = 'feature_number')
write_csv(linda_depletolites, '~/Documents/GitHub/DORCIERR/data/analysis/lindaDepletolites.csv')
View(venn_df)
write_csv(venn_df, )
write_csv(venn_df, '~/Documents/GitHub/DORCIERR/data/analysis/vennDiagramOverlap.csv')
View(ecoNet)
# EcoNet
ecoNet <- read_csv('~/Documents/Github/DORCIERR/data/raw/metabolomics/ecoNetConsensus.csv')%>%
select(-1)
head(ecoNet)
venn_df <- venn_features%>%
unlist()%>%
as.data.frame()%>%
rename('feature_number' = 1)%>%
rownames_to_column(var = 'Intersection')%>%
mutate(Intersection = gsub('([0-9])', '', Intersection))%>%
left_join(metadata%>%
select(combined_ID, binary_ID, feature_number, network),
by= 'feature_number')%>%
left_join(ecoNet%>%
select(-network)%>%
rename('feature_number' = 'scan'), by = 'feature_number')
venn_df <- venn_features%>%
unlist()%>%
as.data.frame()%>%
rename('feature_number' = 1)%>%
rownames_to_column(var = 'Intersection')%>%
mutate(Intersection = gsub('([0-9])', '', Intersection))%>%
left_join(metadata%>%
select(combined_ID, binary_ID, feature_number, network),
by= 'feature_number')%>%
left_join(ecoNet%>%
select(-network)%>%
mutate(scan = as.character(scan))%>%
rename('feature_number' = 'scan'), by = 'feature_number')
write_csv(venn_df, '~/Documents/GitHub/DORCIERR/data/analysis/vennDiagramOverlap.csv')
# Verification of Eco Net consesnsus scores
# Load Libraries
library(tidyverse)
library(DescTools)
library(wesanderson)
library(grDevices)
select <- dplyr::select
gen_theme <-  function(x){
theme(plot.margin = unit(c(1,1,1.5,1.2), 'cm'),
axis.title = element_text(size = 20),
axis.text.x = element_text(angle = 60, hjust = 1, size = 15),
axis.text.y = element_text(size = 20),
plot.title = element_text(size = 15, face = "bold"),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major.y = element_line(size = 0.2, linetype = 'solid',colour = "gray"), # get rid of major grid
panel.grid.major.x = element_line(size = 0.2, linetype = 'solid',colour = "gray"))
}
# Reading in all data which could be gathered from respecrtive dat --------
# set all locations:
path1 <- 'dorcierr_unmodified'
path2 <- 'dorcierr_NAP'
path3 <- 'dorcierr_SmallNets'
path4 <- 'psuedonitzchia_unmodified'
path5 <- 'dorcierr_FalsePositives'
path6 <- 'psuedonitzchia_FalsePositives'
paths <- c(path1, path2, path3, path4, path5, path6)
# Combine all verification datasets
for (name in paths){
path <- paste0('~/Documents/GitHub/ecoNet/verification/', name)
network <- read_tsv(paste0(path, '/Node_info.tsv'))%>%
select(`cluster index`, componentindex)%>%
rename(feature_number = 1,
network = 2)
libraryMatches <- read_csv(paste0(path, "/libraryMatch.csv"))%>%
rename("feature_number" = '#Scan#',
library_superclass = superclass,
library_class = class,
library_subclass = subclass)%>%
select(feature_number, library_superclass, library_class, library_subclass)
analogMatches <- read_csv(paste0(path, "/analogMatch.csv"))%>%
rename("feature_number" = '#Scan#',
analog_superclass = superclass,
analog_class = class,
analog_subclass = subclass)%>%
select(feature_number, analog_superclass, analog_class, analog_subclass)
csiFingerClassy <- read_csv(paste0(path, '/csiFinger_classyfire.csv'))%>%
rename(smiles = SMILES)
CSIFingerID <- read_tsv(paste0(path, "/summary_csi_fingerid.tsv"))%>%
left_join(csiFingerClassy, by = 'smiles')%>%
rename(feature_number = experimentName,
csiFinger_superclass = superclass,
csiFinger_class = CF_class,
csiFinger_subclass = subclass)%>%
select(feature_number, csiFinger_superclass, csiFinger_class, csiFinger_subclass)%>%
filter(!is.na(csiFinger_superclass))%>%
unique()
# metfragClassy <- read_csv(paste0(path, 'MetFragSMILES.csv'))%>%
#   rename(MetFragSMILES = SMILES,
#          metfrag_superclass = superclass,
#          metfrag_class = CF_class,
#          metfrag_subclass = subclass)%>%
#   select(MetFragSMILES, metfrag_superclass, metfrag_class, metfrag_subclass)
#
# napClassy <- read_csv(paste0(path, 'NAPSMILES.csv'))%>%
#   rename(ConsensusSMILES = SMILES,
#          NAP_superclass = superclass,
#          NAP_class = CF_class,
#          NAP_subclass = subclass)%>%
#   select(ConsensusSMILES, NAP_superclass, NAP_class, NAP_subclass)%>%
#   unique()
#
# napDf <- read_tsv(paste0(path, "moorea2017_NAP.tsv"))%>%
#   rename("feature_number" = "cluster.index")%>%
#   select(feature_number, MetFragSMILES, ConsensusSMILES)%>%
#   left_join(metfragClassy, by = 'MetFragSMILES')%>%
#   left_join(napClassy, by = 'ConsensusSMILES')%>%
#   select(-c(MetFragSMILES, ConsensusSMILES))
# unique()
canopus <- read_csv(paste0(path, '/canopus_summary.csv'))%>%
rename(feature_number = scan,
canopus_superclass = superclass,
canopus_class = class,
canopus_subclass = subclass)%>%
select(feature_number, canopus_superclass, canopus_class, canopus_subclass)%>%
unique()
molnetClassy <- read_csv(paste0(path, "/molNetEnhancer.csv"))%>%
select(`cluster index`, componentindex, CF_superclass, CF_class, CF_subclass)%>%
rename(feature_number = "cluster index",
MolNet_superclass = CF_superclass,
MolNet_class = CF_class,
MolNet_subclass = CF_subclass)%>%
unique()
ecoNet <- read_csv(paste0(path, '/ecoNetConsensus.csv'))%>%
select(-c(1))%>%
rename(feature_number = scan)%>%
filter(!is.na(ecoNetConsensus))%>%
unique()
combined <- network%>%
left_join(libraryMatches, by = 'feature_number')%>%
left_join(analogMatches, by = 'feature_number')%>%
left_join(CSIFingerID, by = 'feature_number')%>%
# left_join(napDf, by = 'feature_number')%>%
left_join(canopus, by = 'feature_number')%>%
left_join(molnetClassy, by = 'feature_number')%>%
left_join(ecoNet, by = c('network', 'feature_number'))%>%
mutate(experiment = name)%>%
select(experiment, everything())
write_csv(combined, paste0('~/Documents/GitHub/ecoNet/verification/analysis/combined_', name,'.csv'))
}
setwd('~/Documents/GitHub/ecoNet/verification/analysis/')
combined_csv <- dir(path = "~/Documents/GitHub/ecoNet/verification/analysis/", pattern = "*.csv")%>%
map(read_csv)%>%
reduce(bind_rows)
combined_csv[combined_csv == 'N/A'] <- NA_real_
combined_csv[combined_csv == 'null'] <- NA_real_
combined_csv[combined_csv == 'no matches'] <- NA_real_
combined_csv[combined_csv == 'nan'] <- NA_real_
baseDf <- combined_csv%>%
separate(experiment, c('experiment', 'version'), sep = '_')
# VIZUALIZATIONS -- False Positives ---------------------------------------
falsePositive <- baseDf%>%
select(experiment, version, network, library_superclass, library_class, library_subclass, MolNet_superclass, MolNet_class, MolNet_subclass, ecoNetConsensus)%>%
gather(annotationSource, annotation, MolNet_superclass:ecoNetConsensus)%>%
group_by(experiment, version, annotationSource)%>%
nest()%>%
mutate(data = map(data, ~ filter(.x, !is.na(library_superclass),
!is.na(annotation))%>%
unite(libraryAnnotation, c('library_superclass', 'library_class', 'library_subclass'), sep = ";")%>%
rowwise()%>%
mutate(congruent = case_when(libraryAnnotation %like% paste0('%', annotation, '%') ~ 1,
TRUE ~ 0))%>%
ungroup()%>%
mutate(total = 1,
truePositiveRate = sum(congruent)/sum(total))%>%
select(truePositiveRate)%>%
unique()))%>%
unnest(data)%>%
rowwise()%>%
mutate(annotationSource = case_when(annotationSource %like% 'MolNet%' ~ paste('Molnet', str_split(annotationSource, '_')[[1]][2]),
TRUE ~ annotationSource))
# VIZUALIZATIONS -- Comparing percent annotation --------------------------
order <- c('Library Matches', 'Analog Matches', 'CSI Finger ID', 'canopus', 'Molnet superclass', 'Molnet class', 'Molnet subclass', 'ecoNetConsensus')
sources <- c('library_superclass', 'analog_superclass', 'csiFinger_superclass', 'canopus_superclass', 'MolNet_superclass', 'MolNet_class', 'MolNet_subclass', 'ecoNetConsensus')
totals <- combined_csv%>%
select(experiment, network)%>%
unique()%>%
group_by(experiment)%>%
mutate(totalFeatures = 1)%>%
select(-network)%>%
summarize_if(is.numeric, sum)%>%
separate(experiment, c('experiment', 'version'), sep = '_')
sums <- baseDf%>%
select(experiment, version, network, all_of(sources))%>%
rename('Library Matches' = 'library_superclass',
'Analog Matches' = 'analog_superclass',
'CSI Finger ID' = 'csiFinger_superclass',
'canopus' = 'canopus_superclass',
'Molnet superclass' = 'MolNet_superclass',
'Molnet class' = 'MolNet_class',
'Molnet subclass' = 'MolNet_subclass')%>%
gather(annotationSource, annotation, 4:ncol(.))%>%
group_by(experiment, version, network,  annotationSource)%>%
mutate(annotation = case_when(sum(!is.na(annotation)) > 0 ~ 1,
TRUE ~ 0))%>%
unique()%>%
ungroup()%>%
group_by(experiment, version, annotationSource)%>%
summarize_if(is.numeric, sum)%>%
left_join(totals, by = c('experiment', 'version'))%>%
mutate(percent = annotation/totalFeatures*100)%>%
left_join(falsePositive, by = c('experiment', 'version', 'annotationSource'))%>%
mutate(truePositives = percent*truePositiveRate,
falsePositives = percent*(1-truePositiveRate))
View(falsePositive)
setwd('..')
path1 <- 'dorcierr_unmodified'
path2 <- 'dorcierr_NAP'
path3 <- 'dorcierr_SmallNets'
path4 <- 'psuedonitzchia_unmodified'
path5 <- 'dorcierr_FalsePositives'
path6 <- 'psuedonitzchia_FalsePositives'
paths <- c(path1, path2, path3, path4, path5, path6)
# Combine all verification datasets
for (name in paths){
path <- paste0('~/Documents/GitHub/ecoNet/verification/', name)
network <- read_tsv(paste0(path, '/Node_info.tsv'))%>%
select(`cluster index`, componentindex)%>%
rename(feature_number = 1,
network = 2)
libraryMatches <- read_csv(paste0(path, "/libraryMatch.csv"))%>%
rename("feature_number" = '#Scan#',
library_superclass = superclass,
library_class = class,
library_subclass = subclass)%>%
select(feature_number, library_superclass, library_class, library_subclass)
analogMatches <- read_csv(paste0(path, "/analogMatch.csv"))%>%
rename("feature_number" = '#Scan#',
analog_superclass = superclass,
analog_class = class,
analog_subclass = subclass)%>%
select(feature_number, analog_superclass, analog_class, analog_subclass)
csiFingerClassy <- read_csv(paste0(path, '/csiFinger_classyfire.csv'))%>%
rename(smiles = SMILES)
CSIFingerID <- read_tsv(paste0(path, "/summary_csi_fingerid.tsv"))%>%
left_join(csiFingerClassy, by = 'smiles')%>%
rename(feature_number = experimentName,
csiFinger_superclass = superclass,
csiFinger_class = CF_class,
csiFinger_subclass = subclass)%>%
select(feature_number, csiFinger_superclass, csiFinger_class, csiFinger_subclass)%>%
filter(!is.na(csiFinger_superclass))%>%
unique()
# metfragClassy <- read_csv(paste0(path, 'MetFragSMILES.csv'))%>%
#   rename(MetFragSMILES = SMILES,
#          metfrag_superclass = superclass,
#          metfrag_class = CF_class,
#          metfrag_subclass = subclass)%>%
#   select(MetFragSMILES, metfrag_superclass, metfrag_class, metfrag_subclass)
#
# napClassy <- read_csv(paste0(path, 'NAPSMILES.csv'))%>%
#   rename(ConsensusSMILES = SMILES,
#          NAP_superclass = superclass,
#          NAP_class = CF_class,
#          NAP_subclass = subclass)%>%
#   select(ConsensusSMILES, NAP_superclass, NAP_class, NAP_subclass)%>%
#   unique()
#
# napDf <- read_tsv(paste0(path, "moorea2017_NAP.tsv"))%>%
#   rename("feature_number" = "cluster.index")%>%
#   select(feature_number, MetFragSMILES, ConsensusSMILES)%>%
#   left_join(metfragClassy, by = 'MetFragSMILES')%>%
#   left_join(napClassy, by = 'ConsensusSMILES')%>%
#   select(-c(MetFragSMILES, ConsensusSMILES))
# unique()
canopus <- read_csv(paste0(path, '/canopus_summary.csv'))%>%
rename(feature_number = scan,
canopus_superclass = superclass,
canopus_class = class,
canopus_subclass = subclass)%>%
select(feature_number, canopus_superclass, canopus_class, canopus_subclass)%>%
unique()
molnetClassy <- read_csv(paste0(path, "/molNetEnhancer.csv"))%>%
select(`cluster index`, componentindex, CF_superclass, CF_class, CF_subclass)%>%
rename(feature_number = "cluster index",
MolNet_superclass = CF_superclass,
MolNet_class = CF_class,
MolNet_subclass = CF_subclass)%>%
unique()
ecoNet <- read_csv(paste0(path, '/ecoNetConsensus.csv'))%>%
select(-c(1))%>%
rename(feature_number = scan)%>%
filter(!is.na(ecoNetConsensus))%>%
unique()
combined <- network%>%
left_join(libraryMatches, by = 'feature_number')%>%
left_join(analogMatches, by = 'feature_number')%>%
left_join(CSIFingerID, by = 'feature_number')%>%
# left_join(napDf, by = 'feature_number')%>%
left_join(canopus, by = 'feature_number')%>%
left_join(molnetClassy, by = 'feature_number')%>%
left_join(ecoNet, by = c('network', 'feature_number'))%>%
mutate(experiment = name)%>%
select(experiment, everything())
write_csv(combined, paste0('~/Documents/GitHub/ecoNet/verification/analysis/combined_', name,'.csv'))
}
setwd('~/Documents/GitHub/ecoNet/verification/analysis/')
combined_csv <- dir(path = "~/Documents/GitHub/ecoNet/verification/analysis/", pattern = "*.csv")%>%
map(read_csv)%>%
reduce(bind_rows)
combined_csv[combined_csv == 'N/A'] <- NA_real_
combined_csv[combined_csv == 'null'] <- NA_real_
combined_csv[combined_csv == 'no matches'] <- NA_real_
combined_csv[combined_csv == 'nan'] <- NA_real_
baseDf <- combined_csv%>%
separate(experiment, c('experiment', 'version'), sep = '_')
# VIZUALIZATIONS -- False Positives ---------------------------------------
falsePositive <- baseDf%>%
select(experiment, version, network, library_superclass, library_class, library_subclass, MolNet_superclass, MolNet_class, MolNet_subclass, ecoNetConsensus)%>%
gather(annotationSource, annotation, MolNet_superclass:ecoNetConsensus)%>%
group_by(experiment, version, annotationSource)%>%
nest()%>%
mutate(data = map(data, ~ filter(.x, !is.na(library_superclass),
!is.na(annotation))%>%
unite(libraryAnnotation, c('library_superclass', 'library_class', 'library_subclass'), sep = ";")%>%
rowwise()%>%
mutate(congruent = case_when(libraryAnnotation %like% paste0('%', annotation, '%') ~ 1,
TRUE ~ 0))%>%
ungroup()%>%
mutate(total = 1,
truePositiveRate = sum(congruent)/sum(total))%>%
select(truePositiveRate)%>%
unique()))%>%
unnest(data)%>%
rowwise()%>%
mutate(annotationSource = case_when(annotationSource %like% 'MolNet%' ~ paste('Molnet', str_split(annotationSource, '_')[[1]][2]),
TRUE ~ annotationSource))
View(falsePositive)
View(totals)
totals <- combined_csv%>%
select(experiment, network)%>%
unique()%>%
group_by(experiment)%>%
mutate(totalFeatures = 1)%>%
select(-network)%>%
summarize_if(is.numeric, sum)%>%
separate(experiment, c('experiment', 'version'), sep = '_')
sums <- baseDf%>%
select(experiment, version, network, all_of(sources))%>%
rename('Library Matches' = 'library_superclass',
'Analog Matches' = 'analog_superclass',
'CSI Finger ID' = 'csiFinger_superclass',
'canopus' = 'canopus_superclass',
'Molnet superclass' = 'MolNet_superclass',
'Molnet class' = 'MolNet_class',
'Molnet subclass' = 'MolNet_subclass')%>%
gather(annotationSource, annotation, 4:ncol(.))%>%
group_by(experiment, version, network,  annotationSource)%>%
mutate(annotation = case_when(sum(!is.na(annotation)) > 0 ~ 1,
TRUE ~ 0))%>%
unique()%>%
ungroup()%>%
group_by(experiment, version, annotationSource)%>%
summarize_if(is.numeric, sum)%>%
left_join(totals, by = c('experiment', 'version'))%>%
mutate(percent = annotation/totalFeatures*100)%>%
left_join(falsePositive, by = c('experiment', 'version', 'annotationSource'))%>%
mutate(truePositives = percent*truePositiveRate,
falsePositives = percent*(1-truePositiveRate))
View(sums)
